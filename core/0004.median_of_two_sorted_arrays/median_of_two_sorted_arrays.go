package median_of_two_sorted_arrays

// 给定两个大小分别为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。
//请你找出并返回这两个正序数组的 中位数 。

// 算法的时间复杂度应该为 O(log (m+n)) 。

// 示例 1：

// 输入：nums1 = [1,3], nums2 = [2]
// 输出：2.00000
// 解释：合并数组 = [1,2,3] ，中位数 2
// 示例 2：

// 输入：nums1 = [1,2], nums2 = [3,4]
// 输出：2.50000
// 解释：合并数组 = [1,2,3,4] ，中位数 (2 + 3) / 2 = 2.5
//

// 提示：
// nums1.length == m
// nums2.length == n
// 0 <= m <= 1000

// 0 <= n <= 1000
// 1 <= m + n <= 2000
// -106 <= nums1[i], nums2[i] <= 106

// 因为A+B的总长度是12，是偶数，所以求中位数的话，需要找到第6小、
// 第7小的元素，找到这两个元素后，相加再 / 2.0就可以了。
// 这里是偶数长度的情况，如果是两个数组长度相加后是奇数也是类似的，
// 比如总长度是 13 ，那就需要找第7小的元素。
// 所以，这题可以转化为，如何找到第k小的元素。

func medianOfTwoSortedArrays(nums1, nums2 []int) float64 {
	
	return 0.0
}
